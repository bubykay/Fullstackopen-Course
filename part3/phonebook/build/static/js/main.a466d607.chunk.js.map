{"version":3,"sources":["components/Input.js","components/Filter.js","components/Button.js","components/Notification.js","components/PersonForm.js","components/Persons.js","services/phoneService.js","App.js","index.js"],"names":["Input","onChange","value","text","Filter","Button","type","onClick","Notification","notificationType","notificationMessage","className","PersonForm","handleNameChange","handlePhoneChange","newName","newPhone","addPerson","onSubmit","Persons","persons","handleDelete","map","person","name","number","id","baseURL","noteServices","getAll","axios","method","then","response","data","addToPhonebook","deletePerson","updatePerson","App","useState","setPersons","setNewName","setNewPhone","filtered","setFiltered","filterVal","setFilterVal","setNotifcationMessage","useEffect","phoneService","notify","message","setTimeout","phoneBookToshow","filter","toLocaleLowerCase","includes","event","length","target","preventDefault","personToAdd","personExist","find","window","confirm","catch","err","concat","deletedPerson","newPerson","ReactDOM","render","document","getElementById"],"mappings":"qLAUeA,EARD,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KAC7B,OACI,gCACKA,EADL,KACY,uBAAOF,SAAUA,EAAUC,MAAOA,QCQvCE,EARA,SAAC,GAA6B,IAA5BH,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KAC9B,OACI,mCACI,cAAC,EAAD,CAAOF,SAAUA,EAAUC,MAAOA,EAAOC,KAAMA,OCE5CE,EARA,SAAC,GAA2B,IAA1BF,EAAyB,EAAzBA,KAAMG,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACzB,OACI,mCACI,wBAAQD,KAAMA,EAAMC,QAASA,EAA7B,SAAuCJ,OCSpCK,EAZM,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,iBAAkBC,EAAyB,EAAzBA,oBACtC,OAAGA,EAEE,qBAAKC,UAAWF,EAAhB,SACKC,IAIC,MCWCE,EAdI,SAAC,GAAgH,IAA/GC,EAA8G,EAA9GA,iBAAkBC,EAA4F,EAA5FA,kBAAmBC,EAAyE,EAAzEA,QAASC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,UAAWP,EAA2C,EAA3CA,oBAAqBD,EAAsB,EAAtBA,iBACzG,OACI,gCACI,cAAC,EAAD,CAAcC,oBAAqBA,EAAqBD,iBAAkBA,IAC1E,yCACA,uBAAMS,SAAUD,EAAhB,UACI,cAAC,EAAD,CAAOhB,SAAUY,EAAkBV,KAAK,OAAOD,MAAOa,IACtD,cAAC,EAAD,CAAOd,SAAUa,EAAmBX,KAAK,SAASD,MAAOc,IACzD,cAAC,EAAD,CAAQV,KAAK,SAASH,KAAK,eCD5BgB,EAXC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACvB,OACI,gCACI,yCACCD,EAAQE,KAAI,SAACC,GAAD,OACT,gCAAsBA,EAAOC,KAA7B,IAAoCD,EAAOE,OAA3C,IAAmD,cAAC,EAAD,CAAQlB,QAAS,kBAAIc,EAAaE,IAASjB,KAAK,SAASH,KAAK,WAAjH,MAAUoB,EAAOG,W,gBCN3BC,EAAU,eAiDDC,EANM,CACjBC,OAzCW,WAKV,OAJeC,IAAM,CAClBC,OAAQ,MACRJ,YAEYK,MAAK,SAAAC,GAChB,OAAOA,EAASC,SAoCrBC,eA/BmB,SAAAD,GAMnB,OALgBJ,IAAM,CAClBC,OAAQ,OACRJ,UACAO,SAEWF,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SA0BvCE,aAvBiB,SAAAF,GAKjB,OAJgBJ,IAAM,CAClBC,OAAQ,SACRJ,QAAQ,GAAD,OAAKA,EAAL,YAAgBO,EAAKR,MAEjBM,MAAK,SAAAC,GAAQ,OAAEA,MAmB9BI,aAhBiB,SAAAH,GAMjB,OALgBJ,IAAM,CAClBC,OAAQ,MACRJ,UACAO,SAEWF,MAAK,SAAAC,GAEhB,OAAOA,EAASC,UCqFTI,EAnHH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRnB,EADQ,KACCoB,EADD,OAEgBD,mBAAS,IAFzB,mBAERxB,EAFQ,KAEC0B,EAFD,OAGkBF,mBAAS,IAH3B,mBAGRvB,EAHQ,KAGE0B,EAHF,OAIgBH,oBAAS,GAJzB,mBAITI,EAJS,KAICC,EAJD,OAKkBL,mBAAS,IAL3B,mBAKTM,EALS,KAKEC,EALF,OAMqCP,mBAAS,MAN9C,mBAMT7B,EANS,KAMYqC,EANZ,KAShBC,qBAAU,WACRC,EACCpB,SACAG,MAAK,SAAAC,GACJO,EAAWP,QAEb,IAEF,IAAMiB,EAAS,SAACC,EAAS7C,GAEjB,OADNyC,EAAsB,CAACI,UAAS7C,SACnB8C,YAAW,WAChBL,EAAsB,QACtB,OAwEJM,EAAkBV,EAASvB,EAAQkC,QAAO,SAAA/B,GAAM,OAAEA,EAAOC,KAAK+B,oBAAoBC,SAASX,EAAUU,wBAAsBnC,EAYjI,OACE,gCACE,2CACA,cAAC,EAAD,CAAQnB,SApBS,SAAAwD,GACnBZ,EAAUa,OAAOd,GAAY,GAAMA,GAAY,GAC/CE,EAAaW,EAAME,OAAOzD,QAkBQC,KAAK,oBAAoBD,MAAO2C,IAChE,cAAC,EAAD,CAAY5B,UAnFE,SAACwC,GACjBA,EAAMG,iBACN,IAAMC,EAAc,CAACrC,KAAMT,EAASU,OAAQT,GAG5C,GAAG6C,EAAYrC,KAAKkC,OAAS,GAAKG,EAAYpC,OAAOiC,OAAQ,EAC1DR,EAAO,8DAA+D,aADzE,CAIA,IAAMY,EAAc1C,EAAQ2C,MAAK,SAAAxC,GAAM,OAAGA,EAAOC,KAAM+B,sBAAuBM,EAAYrC,KAAM+B,uBAGhG,GAAGO,EAsBD,OArBAD,EAAYnC,GAAKoC,EAAYpC,QAGZsC,OAAOC,QAAP,UAAkBlD,EAAlB,wEAEfkC,EACDZ,aAAawB,GACb7B,MAAK,SAAAC,GACDA,GACDO,EAAWpB,EAAQE,KAAI,SAAAC,GAAM,OAAEA,EAAOG,KAAMmC,EAAYnC,GAAGH,EAAOsC,MAClEX,EAAO,6BAA8B,YAErCA,EAAO,kBAAD,OAAmBnC,EAAnB,yCAAmE,SAE3E0B,EAAW,IACXC,EAAY,OAEbwB,OAAM,SAAAC,GACLjB,EAAOiB,EAAIhB,QAAS,aAMxBF,EACCd,eAAe0B,GACf7B,MAAK,SAAAC,GACJ,OAAGA,EAASP,IACVc,EAAWpB,EAAQgD,OAAOnC,IAC1BiB,EAAO,eAAD,OAAgBW,EAAYrC,KAA5B,yBAAyD,WAC/DiB,EAAW,SACXC,EAAY,UAGZQ,EAAOjB,EAASkB,QAAS,YAG1Be,OAAM,SAAAC,GAAG,OAAEjB,EAAO,uBAAwB,cAiCTrC,iBA7Bb,SAAC4C,GACxBhB,EAAWgB,EAAME,OAAOzD,QA4BgDY,kBAzBhD,SAAA2C,GACxBf,EAAYe,EAAME,OAAOzD,QAwBqFa,QAASA,EAASC,SAAUA,EAAUN,oBAAmB,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAqByC,QAAS1C,iBAAgB,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAqBJ,OAC5O,cAAC,EAAD,CAASc,QAASiC,EAAiBhC,aAflB,SAACE,GACHyC,OAAOC,QAAP,iBAAyB1C,EAAOC,KAAhC,OAEfyB,EAAab,aAAab,GAAQS,MAAK,SAAAqC,GACrC7B,EAAWpB,EAAQkC,QAAO,SAAAgB,GAAS,OAAEA,EAAU5C,KAAOH,EAAOG,iBCzGrE6C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a466d607.chunk.js","sourcesContent":["import React from 'react';\n\nconst Input = ({onChange, value, text}) => {\n    return (\n        <div>\n            {text}: <input onChange={onChange} value={value} />\n        </div>\n    );\n};\n\nexport default Input;","import React from 'react';\n\n\nimport Input from './Input';\n\nconst Filter = ({onChange, value, text}) => {\n    return (\n        <>\n            <Input onChange={onChange} value={value} text={text} />\n        </>\n    );\n};\n\nexport default Filter;","import React from 'react';\n\nconst Button = ({text, type, onClick}) => {\n    return (\n        <>\n            <button type={type} onClick={onClick}>{text}</button>\n        </>\n    );\n};\n\nexport default Button;","import React from 'react';\n\nconst Notification = ({notificationType, notificationMessage}) => {\n   if(notificationMessage){\n    return (\n        <div className={notificationType}>\n            {notificationMessage}\n        </div>\n    );\n   }else{\n       return null\n   }\n};\n\nexport default Notification;","import React from 'react';\n\n\nimport Button from './Button';\nimport Input from './Input';\nimport Notification from './Notification';\n\nconst PersonForm = ({handleNameChange, handlePhoneChange, newName, newPhone, addPerson, notificationMessage, notificationType}) => {\n    return (\n        <div>\n            <Notification notificationMessage={notificationMessage} notificationType={notificationType} />\n            <h2>add new</h2>\n            <form onSubmit={addPerson}>\n                <Input onChange={handleNameChange} text=\"name\" value={newName} />\n                <Input onChange={handlePhoneChange} text=\"number\" value={newPhone} />\n                <Button type=\"submit\" text=\"add\" />\n            </form>\n        </div>\n    );\n};\n\nexport default PersonForm;","import React from 'react';\nimport Button from './Button';\n\nconst Persons = ({persons, handleDelete}) => {\n    return (\n        <div>\n            <h2>Numbers</h2>\n            {persons.map((person)=>(\n                <div key={person.id}>{person.name} {person.number} <Button onClick={()=>handleDelete(person)} type=\"button\" text=\"Delete\" /> </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Persons;","import axios from 'axios'\n\nconst baseURL = '/api/persons'\n\n\nconst getAll = () => {\n    const request = axios({\n        method: \"GET\",\n        baseURL\n    })\n     return request.then(response=>{\n         return response.data\n     })\n}\n\n\nconst addToPhonebook = data => {\n    const request = axios({\n        method: \"POST\",\n        baseURL,\n        data\n    })\n    return request.then(response=>response.data)\n}\n\nconst deletePerson = data => {\n    const request = axios({\n        method: \"DELETE\",\n        baseURL: `${baseURL}/${data.id}`\n    })\n    return request.then(response=>response)\n}\n\nconst updatePerson = data => {  \n    const request = axios({\n        method: \"PUT\",\n        baseURL,\n        data\n    })\n    return request.then(response=>{\n\n        return response.data\n    })\n}\n\nconst noteServices = {\n    getAll, \n    addToPhonebook, \n    deletePerson,\n    updatePerson\n}\nexport default noteServices","import React, { useEffect, useState } from 'react'\nimport './index.css'\n\n\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport phoneService from './services/phoneService'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [filtered, setFiltered] = useState(false)\n  const [filterVal, setFilterVal] = useState('')\n  const [notificationMessage, setNotifcationMessage] = useState(null)\n\n\n  useEffect(()=>{\n    phoneService\n    .getAll()\n    .then(response=>{\n      setPersons(response)\n    })\n  },[])\n\n  const notify = (message, type)=>{\n    setNotifcationMessage({message, type})\n          return setTimeout(()=>{\n            setNotifcationMessage(null)\n          },15000)\n  }\n\n  \n\n  const addPerson = (event) =>{\n    event.preventDefault()\n    const personToAdd = {name: newName, number: newPhone}\n\n    //validate fields\n    if(personToAdd.name.length < 3 || personToAdd.number.length <8){\n       notify(\"name should be 3 characters min and number 8 characters min\", \"error\")\n       return\n    }\n    const personExist = persons.find(person=>(person.name).toLocaleLowerCase()===(personToAdd.name).toLocaleLowerCase())\n    \n    //if entry exist in phonebook, update phone number\n    if(personExist){\n      personToAdd.id = personExist.id\n\n      //confirm entry update\n      const response = window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)\n      if(response){\n        phoneService\n      .updatePerson(personToAdd)\n      .then(response=>{\n        if(response){\n          setPersons(persons.map(person=>person.id !==personToAdd.id?person:personToAdd))\n          notify(\"Entry successfully updated\", 'success')\n        }else{\n          notify(`information of ${newName} has already been removed from server`, 'error')\n        }\n        setNewName(\"\")\n        setNewPhone(\"\")\n      })\n      .catch(err=>{\n        notify(err.message, 'error')\n      })\n      }\n      return\n    }\n\n    phoneService\n    .addToPhonebook(personToAdd)\n    .then(response=>{\n      if(response.id){\n        setPersons(persons.concat(response))\n        notify(`Entery  for ${personToAdd.name} successfully created`, \"success\")\n        setNewName(\"\")\n        setNewPhone(\"\")\n        return\n      }else{\n        notify(response.message, \"error\")\n        return\n      }\n    }).catch(err=>notify(\"Something went wrong\", \"error\"))\n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = event => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleFilter = event => {\n    filterVal.length?setFiltered(true):setFiltered(false)\n    setFilterVal(event.target.value)\n  }\n\n  const phoneBookToshow = filtered?persons.filter(person=>person.name.toLocaleLowerCase().includes(filterVal.toLocaleLowerCase())):persons\n\n  const handleDelete = (person) =>{\n    const response = window.confirm(`Delete ${person.name}?`)\n    if(response){\n      phoneService.deletePerson(person).then(deletedPerson=>{\n        setPersons(persons.filter(newPerson=>newPerson.id !== person.id))\n      })\n    }\n    \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter onChange={handleFilter} text=\"Filter shown with\" value={filterVal} />\n      <PersonForm addPerson={addPerson} handleNameChange={handleNameChange} handlePhoneChange={handlePhoneChange} newName={newName} newPhone={newPhone} notificationMessage={notificationMessage?.message} notificationType={notificationMessage?.type} />\n      <Persons persons={phoneBookToshow} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}